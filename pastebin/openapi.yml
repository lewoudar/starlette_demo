info:
  title: Pastebin API
  version: '1.0'
  description: A simple application to share some python code snippets.
openapi: 3.0.0

tags:
  - name: users
    description: Operations related to users
  - name: snippets
    description: Operations related to user snippets

paths:
  /users/:
    get:
      tags:
        - users
      description: Returns a page of users
      responses:
        '200':
          description: Returns a page of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPage'
    post:
      tags:
        - users
      description: Creates a new user and returns its information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Returns user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
  /users/{id}:
    get:
      tags:
        - users
      description: Get user information given a unique integer identifier.
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Returns user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - users
      security:
        - BasicAuth: []
      description: Update user properties. You can update one or multiple properties at the same time.
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Returns updated user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - users
      security:
        - BasicAuth: []
      parameters:
        - $ref: '#/components/parameters/IdParam'
      description: Deletes a user.
      responses:
        '204':
          $ref: '#/components/responses/DeleteResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /snippets/:
    get:
      tags:
        - snippets
      description: Returns a page of snippets
      responses:
        '200':
          description: Returns a page of snippets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnippetPage'
    post:
      tags:
        - snippets
      security:
        - BasicAuth: []
      description: Creates a new snippet and returns its information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snippet'
      responses:
        '201':
          description: Returns snippet information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /snippets/{id}:
    get:
      tags:
        - snippets
      description: Get snippet information given a unique integer identifier.
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Returns snippet information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
    patch:
      tags:
        - snippets
      security:
        - BasicAuth: []
      description: Update snippet properties. You can update one or multiple properties at the same time.
      parameters:
        - $ref: '#/components/parameters/IdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Snippet'
      responses:
        '200':
          description: Returns updated snippet.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippet'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      tags:
        - snippets
      security:
        - BasicAuth: []
      parameters:
        - $ref: '#/components/parameters/IdParam'
      description: Deletes a snippet.
      responses:
        '204':
          $ref: '#/components/responses/DeleteResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /snippets/languages:
    get:
      tags:
        - snippets
      description: Returns the list of languages supported
      parameters:
        - $ref: '#/components/parameters/NameParam'
      responses:
        '200':
          description: Returns a JSON list of languages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Languages'
  /snippets/styles:
    get:
      tags:
        - snippets
      description: Returns the list of highlight styles supported
      parameters:
        - $ref: '#/components/parameters/NameParam'
      responses:
        '200':
          description: Returns a JSON list of styles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Styles'
  /snippets/{id}/highlight:
    get:
      tags:
        - snippets
      description: Get snippet information given a unique integer identifier.
      parameters:
        - $ref: '#/components/parameters/IdParam'
      responses:
        '200':
          description: Returns highlighted snippet.
          content:
            text/html:
              schema:
                type: string


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique numeric identifier of the user
          example: 1
        email:
          type: string
          example: foo@bar.com
        password:
          type: string
          writeOnly: true
          minLength: 4
          maxLength: 100
          example: hello
        pseudo:
          type: string
          minLength: 2
          maxLength: 100
          example: foobar
        first_name:
          type: string
          minLength: 2
          maxLength: 100
          example: foo
        last_name:
          type: string
          minLength: 2
          maxLength: 100
          example: bar
        created_at:
          type: string
          format: datetime
          description: datetime represented in iso format
          example: '2020-06-20T23:15:32'
          readOnly: true
      required:
        - id
        - email
        - password
        - pseudo
        - first_name
        - last_name
        - created_at
    UserPage:
      type: object
      properties:
        previous:
          type: string
          description: Optional url of the previous page of results. Can be null or a string.
          example: http://localhost:8000/users/?page=1
        next:
          type: string
          description: Optional url of the next page of results. Can be null or a string.
          example: http://localhost:8000/users/?page=2
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
      required:
        - previous
        - next
        - items
    Languages:
      type: array
      items:
        type: string
    Styles:
      type: array
      items:
        type: string
    Snippet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
          description: Unique numeric identifier of the snippet
          example: 1
        title:
          type: string
          description: the snippet title
          example: snippet title
          minLength: 2
          maxLength: 100
        code:
          type: string
          description: the snippet code
          example: print('hello world')
        linenos:
          type: boolean
          description: True if you want line number for the highlighted code. Look at the route /snippets/{id}/highlight
          example: true
        language:
          type: string
          description: A language supported by the api. Look at the route /snippets/languages
          example: python
        style:
          type: string
          description: A style supported for the highlighted code. Look at the route /snippets/styles
          example: friendly
        created_at:
          type: string
          format: datetime
          description: datetime represented in iso format
          example: '2020-06-20T23:15:32'
          readOnly: true
        user:
          type: string
          format: url
          description: an url pointing to owner information
          example: http://localhost:8000/users/1
          readOnly: true
        highlight:
          type: string
          format: url
          description: an url pointing to the highlighted snippet code
          example: http://localhost:8000/snippets/1/highlight
          readOnly: true
      required:
        - id
        - title
        - code
        - language
        - style
        - created_at
    SnippetPage:
      type: object
      properties:
        previous:
          type: string
          description: Optional url of the previous page of results. Can be null or a string.
          example: http://localhost:8000/snippets/?page=1
        next:
          type: string
          description: Optional url of the next page of results. Can be null or a string.
          example: http://localhost:8000/snippets/?page=2
        items:
          type: array
          items:
            $ref: '#/components/schemas/Snippet'
      required:
        - previous
        - next
        - items
    SimpleError:
      type: object
      properties:
        detail:
          type: string
          description: |
            a message indicating whether the resource is not found, forbidden or unauthorized depending of the response
            status code
      required:
        - detail

  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleError'
    Forbidden:
      description: The specified resource is forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleError'
    Unauthorized:
      description: The specified resource is unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SimpleError'
    BadRequest:
      description: The payload is incorrect
      content:
        application/json:
          schema:
            type: object
            properties:
              detail:
                type: object
                properties:
                  errors:
                    type: object
                  input:
                    type: object
                required:
                  - errors
                  - input
            required:
              - detail
    DeleteResponse:
      description: The resource was deleted

  parameters:
    IdParam:
      name: id
      in: path
      description: numeric id of the resource to get, update or delete
      required: true
      example: 1
      schema:
        type: integer
    NameParam:
      name: name
      in: query
      required: false
      description: |
        This query parameter will help you to filter results in the list. You can use glob-style patterns to help you.
        For example these characters have special meaning:
        * "?" means zero or one character. For example if you search with value **p?thon**, possible response values
        are **pthon**, **python**, **pethon**, etc..
        * "*" means 0 or more characters in a row. For example if you search with value **p\*** possible response
        values are **python**, **php**, **powershell**, etc..
      schema:
        type: string
      example: python

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic